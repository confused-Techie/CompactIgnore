const { isNotNull, sanatize } = require('./helpers.js');

function injest(data) {
  var tmpReturn = "";

  if (isNotNull(data.comment)) {
    tmpReturn += addComment(data.comment);
  }

  if (isNotNull(data.action) && isNotNull(data.location)) {
    tmpReturn += addEntry(data.action, data.location);
  }
  return tmpReturn;
}

function addComment(string) {
  let comment = sanatize(string);
  comment = `# ${comment}\n`;
  return comment;
}

function addEntry(action, location) {
  let fileLoc = sanatize(location);
  let formattedLoc = escape(fileLoc);
  var tmpReturn = "";

  if (action == "exclude") {
    tmpReturn = `${formattedLoc}\n`;
  } else if (action == "include") {
    tmpReturn = `!${formattedLoc}`;
  }
  return tmpReturn;
}

function attribution() {
  return "# === This file was Autogenerated by the CompactIgnore npmignore Profile === #\n\n";
}

function escape(string) {
  // while in the future this should be renamed and instead check for improper files specified according to the npm spec
  // for now it'll just return
  return string;
}

module.exports = { injest, attribution };
